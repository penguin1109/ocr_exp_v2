DETECTION_PREDICTION:
    CKPT: !!str '/home/guest/ocr_exp_v2/text_detection/demo/weight/CTPN_FINAL_CHECKPOINT.pth'
    MIN_V_OVERLAP: 0.7
    MIN_SIZE_SIM: 0.7
    MAX_HORI_GAP: 20 ## Max Horizontal Gap을 작게 두어야 최대한 단가 / 수량과 같은 정보가 따로 detect된다.
    CONF_SCORE: 0.9 ## Confidence score 예측하는 부분에서 -> PV-RCNN에서 사용한 gt와의 IoU를 기반으로 학습하는 방법을 사용하면 어떨까? (performance based training)
    IOU_THRESH: 0.2 ## NMS를 계산할때 다른, 기준 CONF_SCORE을 넘은 RoI에 대해서 계산을 하게 된다.
    # 겹치는IOU score이 0.2이하인 경우에만 선택하도록 한다. (그래야 중첩이 아니라고 생각함)

    ANCHOR_SHIFT: 16
    FEATURE_STRIDE: 16
    ANCHOR_HEIGHTS: ## anchor height는 고정시켜서 학습을 하였기 때문에
        # 결국 regression loss를 학습 시킬 때에도 target값을 고정된 anchor의 크기를 사용해서 encoding을 했을 것이다.
        #- 7
        - 11
        - 15
        - 22
        - 32
        - 45
        - 65
        - 93
        - 133
        - 190
        - 273
    MIN_SCORE: 0.9
    NMS_THRESH: 0.3 ## 이걸 키우게 되면 
    REFINEMENT: False

DETECTION_TRAINING:
    LOSS_LAMDA_REG: 2.0
    LOSS_LAMDA_CLS: 1.0
    LOSS_LAMBDA_REFINE: 2.0
    ANCHOR_IGNORE_LABEL: -1
    ANCHOR_POSITIVE_LABEL: 1
    ANCHOR_NEGATIVE_LABEL: 0 ## Classification layer의 학습 target label
    IOU_OVERLAP_THRESH_POS: 0.5 ## 해당 anchor을 ground truth와 비교할때 pos로 설정하는 최소 IOU값
    IOU_OVERLAP_THRESH_NEG: 0.3 ## 해당 anchor을 ground truth와 비교할때 neg으로 설정하는 최대 IOU값

RECOGNITION_PREDICTION:
    RES_IN: !!int 32
    ENCODER_LAYER_NUM: !!int 5
    HEAD_NUM: !!int 8
    TPS: !!bool false
    ACTIVATION: !!str 'RELU'
    USE_RESNET: !!bool true
    ADAPTIVE_PE: !!bool false
    BATCH_SIZE: !!int 1
    SEPERABLE_FFN: !!bool true

    CONVERTER: !!str "general" # "hangul"
    NAME: !!str  "HENNET" # "CLOVA" # "HENNET" # "CLOVA"
    CKPT: !!str '/home/guest/ocr_exp_v2/weight/layer5_relu_GENERAL_MULTI_NORM_0to1_ADAM_STEP_32_128/2023-02-02_min_loss.pth' # '/home/guest/ocr_exp_v2/text_recognition_multi/ckpt/TEXT_RECOG_MULTI_BEST.pth'
    IMG_H: 32 # 64 # 32
    IMG_W: 192 # 128 # 200 # 128
    MEAN: !!float 0.0
    STD: !!float 1.0
    USE_NUM: !!bool true
    USE_ENG: !!bool true
    MAX_LENGTH: !!int 25 # 45
    BASE_CHARACTERS: 
        - ' ' ## 공백은 종성에 무조건 있기 때문에 꼭 포함을 시켜야 한다.
        - 'ㄱ'
        - 'ㄲ'
        - 'ㄳ'
        - 'ㄴ'
        - 'ㄵ'
        - 'ㄶ'
        - 'ㄷ'
        - 'ㄸ'
        - 'ㄹ'
        - 'ㄺ'
        - 'ㄻ'
        - 'ㄼ'
        - 'ㄽ'
        - 'ㄾ'
        - 'ㄿ'
        - 'ㅀ'
        - 'ㅁ'
        - 'ㅂ'
        - 'ㅃ'
        - 'ㅄ'
        - 'ㅅ'
        - 'ㅆ'
        - 'ㅇ'
        - 'ㅈ'
        - 'ㅉ'
        - 'ㅊ'
        - 'ㅋ'
        - 'ㅌ'
        - 'ㅍ'
        - 'ㅎ'
        - 'ㅏ'
        - 'ㅐ'
        - 'ㅑ'
        - 'ㅒ'
        - 'ㅓ'
        - 'ㅔ'
        - 'ㅕ'
        - 'ㅖ'
        - 'ㅗ'
        - 'ㅘ'
        - 'ㅙ'
        - 'ㅚ'
        - 'ㅛ'
        - 'ㅜ'
        - 'ㅝ'
        - 'ㅞ'
        - 'ㅟ'
        - 'ㅠ'
        - 'ㅡ'
        - 'ㅢ'
        - 'ㅣ'

    RGB: !!bool false